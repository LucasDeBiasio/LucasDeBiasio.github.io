name: Deploy SvelteKit App to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Debug - Repository Structure
        run: |
          echo "Repository structure:"
          ls -la
          echo "sveltePortfolio contents:"
          ls -la sveltePortfolio || echo "Directory not found"
      
      - name: Install Dependencies
        run: |
          cd sveltePortfolio
          npm install
      
      - name: Debug - Package Configuration
        run: |
          cd sveltePortfolio
          echo "package.json contents:"
          cat package.json
          echo "svelte.config.js contents (if exists):"
          cat svelte.config.js || echo "File not found"
      
      - name: Build SvelteKit App
        run: |
          cd sveltePortfolio
          npm run build
      
      - name: Debug - Build Output
        run: |
          cd sveltePortfolio
          echo "Build directories:"
          find . -type d -name "build" -o -name "public" -o -name "dist" -o -name ".svelte-kit"
          
          # Check if build directory exists and show contents
          if [ -d "build" ]; then
            echo "build directory contents:"
            ls -la build
            echo "Does build/index.html exist?"
            test -f build/index.html && echo "Yes" || echo "No"
          else
            echo "build directory not found, checking alternatives"
            # Check possible alternative build directories
            for dir in ".svelte-kit/output/client" ".svelte-kit/build" "public" "dist"; do
              if [ -d "$dir" ]; then
                echo "$dir directory contents:"
                ls -la "$dir"
                echo "Does $dir/index.html exist?"
                test -f "$dir/index.html" && echo "Yes" || echo "No"
              fi
            done
          fi
      
      - name: Prepare for deployment
        run: |
          # Try to find the built index.html
          cd sveltePortfolio
          BUILD_DIR=""
          
          # Check common build output directories
          for dir in "build" ".svelte-kit/output/client" "public" "dist"; do
            if [ -d "$dir" ] && [ -f "$dir/index.html" ]; then
              BUILD_DIR="$dir"
              break
            fi
          done
          
          if [ -z "$BUILD_DIR" ]; then
            echo "Warning: Could not find build directory with index.html"
            echo "Looking for any HTML files in the project:"
            find . -name "*.html"
            
            # For emergency fallback, create a minimal index.html
            mkdir -p build_fallback
            echo "<html><head><title>SvelteKit App</title></head><body><h1>SvelteKit App</h1><p>The app deployment is still being configured.</p></body></html>" > build_fallback/index.html
            BUILD_DIR="build_fallback"
          fi
          
          echo "Using build directory: $BUILD_DIR"
          echo "Files to be deployed:"
          ls -la "$BUILD_DIR"
          
          # Export the build directory path for the next step
          echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './sveltePortfolio/${{ env.BUILD_DIR }}'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
